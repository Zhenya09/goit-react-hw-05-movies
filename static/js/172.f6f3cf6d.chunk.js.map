{"version":3,"file":"static/js/172.f6f3cf6d.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","pages/MovieDelails.styled.js","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieCardContainer = styled.div`\n  display: flex;\n  gap: 40px;\n  margin-top: 20px;\n`;\n\nexport const Img = styled.img`\n  height: 600px;\n  width: 400px;\n`;\n\nexport const MovieInfo = styled.div`\n  padding-top: 20px;\n  max-width: 1100px;\n`;\n\nexport const MovieName = styled.h2`\n  margin-bottom: 20px;\n`;\n\nexport const MovieInfoText = styled.p`\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const MovieInfoTextBold = styled.span`\n  display: block;\n  margin-bottom: 20px;\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const MoreInfoWrapper = styled.div`\n  margin-top: 20px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  border-top: 1px solid #d3d3d3;\n  border-bottom: 1px solid #d3d3d3;\n`;\n\nexport const MoreInfoHeader = styled.h3`\n  font-size: 25px;\n  font-weight: 500;\n`;\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  display: flex;\n  gap: 20px;\n  font-size: 18px;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 16px;\n  margin-right: 5px;\n  padding: 5px 15px;\n  border: 1px solid #0d57aa;\n  border-radius: 6px;\n  background-color: #b5d1f2;\n  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);\n  transition: all 0.2s ease-in-out;\n  text-decoration: none;\n  color: #0d57aa;\n\n  &:hover,\n  &:focus {\n    background-color: #0d57aa;\n    color: #ffffff;\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Img,\n  List,\n  ListItem,\n  MoreInfoHeader,\n  MoreInfoWrapper,\n  MovieCardContainer,\n  MovieInfo,\n  MovieInfoText,\n  MovieInfoTextBold,\n  MovieName,\n  StyledLink,\n} from './MovieCard.styled';\nimport { LoadingIndicator } from 'components/SharedLayout/LoadingDots';\n\nconst MovieCard = ({ movie }) => {\n  const { title, release_date, poster_path, vote_average, overview, genres } =\n  movie;\n  const location = useLocation();\n  const releaseDate = new Date(release_date);\n\n  const releaseYear = isNaN(releaseDate)\n    ? 'Unknown'\n    : releaseDate.getFullYear();\n\n  const posterUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w400/${poster_path}`\n    : 'https://via.placeholder.com/400x600.png?text=Poster+Not+Available';\n\n  const userScore = vote_average\n    ? `${(vote_average * 10).toFixed(0)}%`\n    : 'Not rated yet';\n\n  if (!movie || !movie.title || !movie.release_date || !movie.poster_path) {\n  return <LoadingIndicator />;\n}\n\n  return (\n    <>\n      <MovieCardContainer>\n        <Img src={posterUrl} alt={`${title} poster`} />\n\n        <MovieInfo>\n          <MovieName>\n            {title ?? 'Unknown'} ({releaseYear})\n          </MovieName>\n          <MovieInfoText>User Score: {userScore}</MovieInfoText>\n          <MovieInfoText>\n            <MovieInfoTextBold>Overview:</MovieInfoTextBold> {overview}\n          </MovieInfoText>\n          \n          {genres && genres.length > 0 && (\n  <MovieInfoText>\n    <MovieInfoTextBold>Genres:</MovieInfoTextBold>\n    {genres.map(genre => genre.name).join(', ')}\n  </MovieInfoText>\n)}\n        </MovieInfo>\n\n      </MovieCardContainer>\n\n      <MoreInfoWrapper>\n        <MoreInfoHeader>Additional information</MoreInfoHeader>\n\n        <List>\n          <ListItem>\n            <StyledLink\n              to=\"cast\"\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Cast\n            </StyledLink>\n          </ListItem>\n\n          <ListItem>\n            <StyledLink\n              to=\"reviews\"\n              state={{ from: location?.state?.from ?? '/' }}\n            >\n              Reviews\n            </StyledLink>\n          </ListItem>\n        </List>\n\n      </MoreInfoWrapper>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({ name: PropTypes.string })\n    ),\n  }).isRequired,\n};\n\nexport default MovieCard;\n\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 20px 40px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  font-size: 14px;\n  border: 1px solid #0d57aa;\n  border-radius: 6px;\n  background-color: #b5d1f2;\n  transition: color 0.2s ease-in-out, background-color 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: #0d57aa;\n    color: #ffffff;\n  }\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { useParams, Outlet, useLocation, Link } from 'react-router-dom';\nimport { BsArrowLeftShort } from 'react-icons/bs';\nimport { fetchMovieById } from '../services/api';\nimport MovieCard from '../components/MovieCard/MovieCard';\nimport { Button, Container } from './MovieDelails.styled';\nimport { LoadingIndicator } from 'components/SharedLayout/LoadingDots';\n\nconst MovieDelails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [selectedMovie, setSelectedMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchSelectedMovie = async (movieId) => {\n      try {\n        setIsLoading(true);\n        const movieData = await fetchMovieById(movieId);\n        setSelectedMovie(movieData);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchSelectedMovie(movieId);\n  }, [movieId]);\n\n  return (\n    <main>\n      <Container>\n        {isLoading && <LoadingIndicator />}\n        {error && <div>Error: {error.message}</div>}\n        {!isLoading && !error && (\n          <>\n            <Link to={location?.state?.from ?? '/'}>\n              <Button type=\"button\">\n                <BsArrowLeftShort\n                  style={{ width: '25px', height: '25px', display: 'inline-block' }}\n                />\n                Go back\n              </Button>\n            </Link>\n\n            {selectedMovie && <MovieCard movie={selectedMovie} />}\n\n            <Suspense fallback={<LoadingIndicator />}>\n              <Outlet />\n            </Suspense>\n          </>\n        )}\n      </Container>\n    </main>\n  );\n};\n\nexport default MovieDelails;","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '8dac8a47bc620ef900b4dc8f5ca86b45';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n"],"names":["MovieCardContainer","styled","Img","MovieInfo","MovieName","MovieInfoText","MovieInfoTextBold","MoreInfoWrapper","MoreInfoHeader","List","ListItem","StyledLink","Link","movie","title","release_date","poster_path","vote_average","overview","genres","location","useLocation","releaseDate","Date","releaseYear","isNaN","getFullYear","posterUrl","userScore","toFixed","src","alt","length","map","genre","name","join","to","state","from","Container","Button","movieId","useParams","useState","selectedMovie","setSelectedMovie","isLoading","setIsLoading","error","setError","useEffect","fetchSelectedMovie","fetchMovieById","movieData","message","type","style","width","height","display","Suspense","fallback","baseURL","API_KEY","fetchTrendMovies","axios","data","fetchMovieByName","query","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}