{"version":3,"file":"static/js/432.331ef234.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/SearchMovies/SearchMovies.styled.js","components/SearchMovies/SearchMovies.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledSection = styled.section`\n  padding-right: 50px;\n  padding-left: 50px;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-top: 30px;\n  margin-bottom: 30px;\n  padding-left: 5px;\n  font-size: 30px;\n  font-weight: 600;\n  text-align: center;\n`;\n\nexport const List = styled.ul`\n  list-style: disc;\n  color: #0d57aa;\n`;\n\nexport const ListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  font-size: 20px;\n  color: #0d57aa;\n  transition: color 0.2s ease-in-out, border-bottom 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: #1c85ff;\n    border-bottom: 2px solid #1c85ff;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 8px;\n  margin-right: 15px;\n  font-size: 16px;\n`;\n\nexport const Button = styled.button`\n  background-color: #b5d1f2;\n  border: 1px solid #0d57aa;\n  border-radius: 4px;\n  padding: 8px 18px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: #0d57aa;\n    color: #ffffff;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { toast } from 'react-hot-toast';\nimport { Button, Form, Input } from './SearchMovies.styled';\n\nconst SearchMovies = ({ onSubmit }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const query = e.target.elements.query.value;\n\n    if (!query) {\n      toast.error('Please enter something');\n      return;\n    }\n\n    onSubmit(query); \n    e.target.reset(); \n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Input name=\"query\" type=\"text\" placeholder=\"Search movies\" />\n      <Button type=\"submit\">Search</Button>\n    </Form>\n  );\n};\n\nSearchMovies.propTypes = { onSubmit: PropTypes.func.isRequired };\n\nexport default SearchMovies;\n\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { fetchMovieByName } from '../services/api';\nimport SearchMovies from '../components/SearchMovies/SearchMovies';\nimport {\n  List,\n  ListItem,\n  SectionTitle,\n  StyledLink,\n  StyledSection,\n} from '../components/MovieList/MovieList.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (!query) return;\n\n    const getMovie = async () => {\n      setIsLoading(true);\n\n      try {\n        const { results } = await fetchMovieByName(query);\n\n        if (results.length === 0) {\n          toast.dismiss();\n          toast.error('No movies found');\n          setMovies([]);\n        } else {\n          setMovies(results);\n        }\n      } catch (error) {\n        setError(error);\n        toast.error(error.message);\n        setMovies([]);\n      }\n\n      setIsLoading(false);\n    };\n\n    getMovie();\n  }, [searchParams]);\n\n  const handleSubmit = query => {\n    setSearchParams({ query });\n  };\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  }\n\n  return (\n    <main>\n      <StyledSection>\n        <SectionTitle>Movies Page</SectionTitle>\n\n        <SearchMovies onSubmit={handleSubmit} />\n\n        <List>\n          {movies.map(movie => (\n            <ListItem key={movie.id}>\n              <StyledLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </StyledLink>\n            </ListItem>\n          ))}\n        </List>\n      </StyledSection>\n    </main>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '8dac8a47bc620ef900b4dc8f5ca86b45';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n"],"names":["StyledSection","styled","SectionTitle","List","ListItem","StyledLink","Link","Form","Input","Button","onSubmit","e","preventDefault","query","target","elements","value","reset","toast","name","type","placeholder","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","isLoading","setIsLoading","error","setError","useEffect","get","getMovie","fetchMovieByName","results","length","message","map","movie","to","id","state","from","title","baseURL","API_KEY","fetchTrendMovies","axios","data","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}